namespace: default
env: dev
k8s_1dot8_or_above: true
has_static_volumes: true
services:
  expose_node_port: true
certs:
  ca_crt: XYZ==
  server_crt: XYZ==
  server_key: XYZ==
docker:
  registry: docker.io
  namespace: ffdl
  image_prefix: ffdl-
  pullPolicy: IfNotPresent
  imagePullSecret: regcred
trainer:
  image_name: trainer-v2-service
  version: v0.1.1
  port: 0
  replicas: 1
  cpus: 100m
  memory: 64Mi
  gpu_limits: nvidia-TeslaK80=20,nvidia-TeslaP100=10
  ratelimiter_service_name: ""
#restapi:
#  version: v0.1.1
#  port: 0
#  replicas: 1
#  cpus: 50m
#  memory: 64Mi
ffdl_lcm:
  lcm:
    image_name: lifecycle-manager-service
    version: v0.1.1
    port: 0
    replicas: 1
    cpus: 100m
    memory: 64Mi
    load_training_data_mem_in_mb: 300
    milli_cpu: 60
    mem_in_mb: 300
    device_plugin: true
    # This will used for "volume.beta.kubernetes.io/storage-class" for the shared volume
    shared_volume_storage_class: ""
    image_tag: "dev"
  learner:
    tag: master-97
    docker_namespace: ffdl
    kubeSecret: lcm-secrets
ffdl-model-metrics:
  trainingdata:
    image_name: training-data-service
    version: v0.1.1
    port: 0
    replicas: 1
    cpus: 50m
    memory: 64Mi
databroker:
  tag: v0.1.1
webui:
  version: v0.1.1
  port: 0
  cpus: 50m
  memory: 64Mi
mongo:
  address: localhost:27017
  username: test
  password: test
etcd:
  address: http://etcd:2379
  username: test
  password: test
  prefix: test
objectstore:
  type: s3_datastore
  username: test
  password: test
elasticsearch:
  address: http://elasticsearch:9200
  username: test
  password: test
  scheme: http
prometheus:
  deploy: true
  etcd_urls: localhost:2379
  cluster_name: FfDL
  port: 9090
  alertmanager_port: 9093
grafana:
  port: 3000
log:
  level: INFO
global:
  trainer_service_name: "ffdl-trainer"
  lcm_service_name: "ffdl-lcm"
  tds_service_name: "ffdl-trainingdata"

#  DLAAS_TRAINER_SERVICE_NAME: "dlaas-trainer-v2"
#  DLAAS_LCM_SERVICE_NAME: "dlaas-lcm"
#  DLAAS_TDS_SERVICE_NAME: "dlaas-training-data"
